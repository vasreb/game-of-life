"use strict";const Field={generate(e,t){e.innerHTML="",this.wrapper=e,this.options=t;const{fieldSquareSize:l}=t;this.field=Array(l).fill(0).map(e=>Array(l).fill(0)),FieldRender.render(),this._addListeners()},_addListeners(){this.wrapper.addEventListener("mousedown",e=>{if(e.preventDefault(),e.target.classList.contains("cell")){const{x:t,y:l}=e.target;self=this,this.wrapper.addEventListener("mouseup",function e(r){r.preventDefault();const{x:i,y:n}=r.target;self.wrapper.removeEventListener("mouseup",e),self.fillRectangle({x1:t,y1:l,x2:i,y2:n})}),FieldRender.updateRender()}})},fillRectangle({x1:e,y1:t,x2:l,y2:r}){let i,n,a,d;l<e?(i=l,n=e):(i=e,n=l),r<t?(a=r,d=t):(a=t,d=r);for(let e=a;e<=d;e++)for(let t=i;t<=n;t++)this.field[e][t]=this.field[e][t]?0:1;FieldRender.updateRender()},update(){const e=this.field,t=Array(e.length).fill(0).map(t=>Array(e.length).fill(0));e.forEach((l,r)=>{l.forEach((l,i)=>{t[r][i]=CellUtility.cellIsWillAlive({x:i,y:r},e)?1:0})}),this.field=t,FieldRender.updateRender()}},CellUtility={cellIsWillAlive({x:e,y:t},l){let r=0;return l[t-1]&&l[t-1][e-1]&&r++,l[t-1]&&l[t-1][e]&&r++,l[t-1]&&l[t-1][e+1]&&r++,l[t][e-1]&&r++,l[t][e+1]&&r++,l[t+1]&&l[t+1][e-1]&&r++,l[t+1]&&l[t+1][e]&&r++,l[t+1]&&l[t+1][e+1]&&r++,!l[t][e]&&r===this.options.alifeRule1||!(!l[t][e]||r!==this.options.alifeRule2&&r!==this.options.alifeRule3)}};Object.setPrototypeOf(CellUtility,Field);const FieldRender={render(){const{cellSize:e}=this.options;this.wrapper.style.width=`${this.field.length*e}px`,this.wrapper.style.height=`${this.field.length*e}px`,this.field.forEach((t,l)=>{t.forEach((t,r)=>{const i=document.createElement("div");i.x=r,i.y=l,i.classList.add("cell"),i.isLife=t,i.style.cssText=`\n        box-sizing: border-box;\n        border: ${.01*e}px solid black; \n        background-color: ${t?"green":"#DDD"};\n        height: ${e}px;\n        width: ${e}px;\n        font-family: Arial;\n        text-align: center;\n        color: white;`,this.wrapper.append(i)})}),this.liveCellCollection=Array.from(this.wrapper.children)},updateRender(){this.liveCellCollection.forEach(e=>{const t=this.field[e.y][e.x];e.style.backgroundColor=t?"green":"#ddd",e.isLife=t?1:0})}};Object.setPrototypeOf(FieldRender,Field);const wrapper=document.querySelector(".wrapper"),updateBtn=document.querySelector(".update"),generateBtn=document.querySelector(".generate");updateBtn.addEventListener("click",()=>{updateBtn.on?clearInterval(updateBtn.timer):updateBtn.timer=setInterval(()=>{Field.update()},Number(document.querySelector("#frequency").value)),updateBtn.on=!updateBtn.on}),generateBtn.addEventListener("click",()=>{const e={fieldSquareSize:Number(document.querySelector("#fieldSquareSize").value),cellSize:Number(document.querySelector("#cellSize").value),alifeRule1:Number(document.querySelector("#alifeRule1").value),alifeRule2:Number(document.querySelector("#alifeRule2").value),alifeRule3:Number(document.querySelector("#alifeRule3").value),frequency:Number(document.querySelector("#frequency").value)};Field.generate(wrapper,e),document.querySelector(".menu").style.display="none"});